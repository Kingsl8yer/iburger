{
  "version": 3,
  "sources": [
    "store/actions/actionTypes.js",
    "shared/utility.js",
    "hoc/Auxiliary/Auxiliary.js",
    "store/actions/burgerBuilder.js",
    "store/actions/orders.js",
    "store/actions/auth.js",
    "components/Burger/BurgerIngredients/BurgerIngredients.module.css",
    "axios-orders.js",
    "components/Navigation/SideDrawer/SideDrawer.module.css",
    "components/Burger/BuildControls/BuildControl/BuildControl.module.css",
    "components/UI/Backdrop/Backdrop.js",
    "components/UI/Modal/Modal.js",
    "components/Navigation/Toolbar/Toolbar.module.css",
    "components/UI/Button/Button.js",
    "components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css",
    "components/Burger/BuildControls/BuildControls.module.css",
    "components/UI/Button/Button.module.css",
    "components/UI/Spinner/Spinner.js",
    "hoc/withErrorHandler/withErrorHandler.js",
    "components/Burger/BurgerIngredients/BurgerIngredients.js",
    "components/Burger/Burger.js",
    "components/Logo/Logo.module.css",
    "components/Navigation/NavigationItems/NavigationItems.module.css",
    "components/UI/Backdrop/Backdrop.module.css",
    "hoc/Layout/Layout.module.css",
    "components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css",
    "components/Burger/Burger.module.css",
    "components/UI/Modal/Modal.module.css",
    "components/UI/Spinner/Spinner.module.css",
    "assests/Images/burger-logo.png",
    "components/Logo/Logo.js",
    "components/Navigation/NavigationItems/NavigationItem/NavigationItem.js",
    "components/Navigation/NavigationItems/NavigationItems.js",
    "components/Navigation/SideDrawer/SideDrawer.js",
    "components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js",
    "components/Navigation/Toolbar/Toolbar.js",
    "hoc/Layout/Layout.js",
    "components/Burger/BuildControls/BuildControl/BuildControl.js",
    "components/Burger/BuildControls/BuildControls.js",
    "components/Burger/OrderSummary/OrderSummary.js",
    "containers/BurgerBuilder/BurgerBuilder.js",
    "containers/Auth/Logout/Logout.js",
    "hoc/asyncComponent/asyncComponent.js",
    "App.js",
    "reportWebVitals.js",
    "store/reducers/burgerBuilder.js",
    "store/reducers/orders.js",
    "store/reducers/auth.js",
    "index.js"
  ],
  "names": [
    "ADD_INGREDIENT",
    "REMOVE_INGREDIENT",
    "SET_INGREDIENTS",
    "FETCH_INGREDIENTS_FAILED",
    "PURCHASE_BURGER_START",
    "PURCHASE_BURGER_SUCCESS",
    "PURCHASE_BURGER_FAIL",
    "PURCHASE_INIT",
    "FETCH_ORDERS_START",
    "FETCH_ORDERS_SUCCESS",
    "FETCH_ORDERS_FAIL",
    "AUTH_START",
    "AUTH_SUCCESS",
    "AUTH_FAIL",
    "AUTH_LOGOUT",
    "SET_AUTH_REDIRECT_PATH",
    "updateObject",
    "oldObject",
    "updatedProperties",
    "checkValidity",
    "value",
    "rules",
    "isValid",
    "required",
    "trim",
    "minLength",
    "length",
    "maxLength",
    "isEmail",
    "test",
    "isNumeric",
    "auxiliary",
    "props",
    "children",
    "addIngredient",
    "name",
    "type",
    "actionTypes",
    "ingredientName",
    "removeIngredient",
    "initIngredients",
    "dispatch",
    "axios",
    "get",
    "then",
    "response",
    "ingredients",
    "data",
    "catch",
    "error",
    "purchaseBurger",
    "orderData",
    "token",
    "post",
    "id",
    "orderId",
    "purchaseBurgerSuccess",
    "purchaseBurgerFail",
    "purchaseInit",
    "fetchOrders",
    "userId",
    "queryParams",
    "res",
    "orders",
    "fetchedOrders",
    "key",
    "push",
    "err",
    "authSuccess",
    "idToken",
    "logout",
    "localStorage",
    "removeItem",
    "checkAuthTimeout",
    "expirationTime",
    "setTimeout",
    "auth",
    "email",
    "password",
    "isSignUp",
    "authData",
    "returnSecureToken",
    "url",
    "expirationDate",
    "Date",
    "getTime",
    "expiresIn",
    "setItem",
    "localId",
    "setAuthRedirectPath",
    "path",
    "authCheckState",
    "getItem",
    "module",
    "exports",
    "instance",
    "create",
    "baseURL",
    "backdrop",
    "show",
    "className",
    "classes",
    "Backdrop",
    "onClick",
    "clicked",
    "Modal",
    "nextProps",
    "nextState",
    "this",
    "modalClosed",
    "style",
    "transform",
    "opacity",
    "Component",
    "button",
    "disabled",
    "Button",
    "btnType",
    "join",
    "spinner",
    "Loader",
    "withErrorHandler",
    "WrappedComponent",
    "state",
    "errorConfirmedHandler",
    "setState",
    "reqInterceptor",
    "interceptors",
    "request",
    "use",
    "req",
    "resInterceptor",
    "eject",
    "message",
    "BurgerIngredients",
    "ingredient",
    "BreadBottom",
    "BreadTop",
    "Seeds1",
    "Seeds2",
    "Meat",
    "Cheese",
    "Bacon",
    "Salad",
    "burger",
    "transformedIngredients",
    "Object",
    "keys",
    "map",
    "ingredKey",
    "Array",
    "_",
    "i",
    "reduce",
    "previousValue",
    "currentValue",
    "concat",
    "Burger",
    "logo",
    "Logo",
    "height",
    "src",
    "burgerLogo",
    "alt",
    "navigationItem",
    "NavigationItem",
    "to",
    "link",
    "exact",
    "activeClassName",
    "active",
    "navigationItems",
    "NavigationItems",
    "isAuthenticated",
    "sideDrawer",
    "attachedClasses",
    "SideDrawer",
    "Close",
    "open",
    "Open",
    "Auxiliary",
    "closed",
    "isAuth",
    "drawerToggle",
    "DrawerToggle",
    "toolbar",
    "Toolbar",
    "drawerToggleClicked",
    "DesktopOnly",
    "Layout",
    "showSideDrawer",
    "sideDrawerClosedHandler",
    "sideDrawerToggleHandler",
    "prevState",
    "Content",
    "connect",
    "buildControl",
    "BuildControl",
    "Label",
    "ingredLabel",
    "Less",
    "remove",
    "More",
    "add",
    "controls",
    "label",
    "buildControls",
    "BuildControls",
    "price",
    "toFixed",
    "ctrl",
    "ingredientAdd",
    "ingredientRemove",
    "ingredientDisabled",
    "OrderButton",
    "purchasable",
    "ordered",
    "OrderSummary",
    "ingredientsSummary",
    "igKey",
    "textTransform",
    "summaryPrice",
    "purchaseCanceled",
    "purchaseContinued",
    "BurgerBuilder",
    "purchasing",
    "purchaseHandler",
    "onSetRedirectPath",
    "history",
    "purchaseCancelHandler",
    "purchaseContinueHandler",
    "onInitPurchase",
    "onInitIngredients",
    "ingredientsCopy",
    "sum",
    "el",
    "disabledInfo",
    "ings",
    "orderSummary",
    "Spinner",
    "onIngredientAdded",
    "onIngredientRemoved",
    "updatePurchaseState",
    "burgerBuilder",
    "totalPrice",
    "ingName",
    "action",
    "Logout",
    "onLogout",
    "actions",
    "asyncComponent",
    "importComponent",
    "component",
    "default",
    "asyncCheckout",
    "asyncOrders",
    "asyncAuth",
    "App",
    "onTryAutoSignup",
    "routes",
    "withRouter",
    "reportWebVitals",
    "onPerfEntry",
    "Function",
    "getCLS",
    "getFID",
    "getFCP",
    "getLCP",
    "getTTFB",
    "initialState",
    "building",
    "INGREDIENTS_PRICE",
    "salad",
    "cheese",
    "meat",
    "bacon",
    "addIngredients",
    "updatedIngredient",
    "updatedState",
    "removeIngredients",
    "updatedIng",
    "updatedSt",
    "setIngredients",
    "fetchIngredientsFailed",
    "order",
    "loading",
    "purchased",
    "purchaseBurgerStart",
    "newOrder",
    "fetchOrdersStart",
    "fetchOrdersSuccess",
    "fetchOrdersFail",
    "reducer",
    "authRedirectPath",
    "authStart",
    "authFail",
    "authLogOut",
    "composeEnhancers",
    "compose",
    "rootReducer",
    "combineReducers",
    "burgerBuilderReducer",
    "orderReducer",
    "authReducer",
    "store",
    "createStore",
    "applyMiddleware",
    "thunk",
    "app",
    "ReactDOM",
    "render",
    "document",
    "getElementById"
  ],
  "mappings": "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",
  "file": "static/js/main.f91af3f5.chunk.js",
  "sourcesContent": [
    "export const ADD_INGREDIENT = 'ADD_INGREDIENT';\r\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\r\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS';\r\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED';\r\n\r\n/* I don't have my 'TRY_PURCHASE' action here because we don't need an identifier for that, it will only be action creator we execute to run some async code, it will never be an action\r\nwe dispatch to reducer due to the async code.*/\r\n\r\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START';\r\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\r\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL';\r\nexport const PURCHASE_INIT = 'PURCHASE_INIT';\r\n\r\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START';\r\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS';\r\nexport const FETCH_ORDERS_FAIL = 'FETCH_ORDERS_FAIL';\r\n\r\nexport const AUTH_START = 'AUTH_START';\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_FAIL = 'AUTH_FAIL';\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\r\n\r\nexport const SET_AUTH_REDIRECT_PATH = 'SET_AUTH_REDIRECT_PATH';",
    "export const updateObject = (oldObject, updatedProperties) => {\r\n    return {\r\n        ...oldObject,\r\n        ...updatedProperties\r\n    };\r\n};\r\n\r\nexport const checkValidity = (value, rules) => {\r\n    let isValid = true;\r\n    if (!rules) {\r\n        return true;\r\n    }\r\n\r\n    if (rules.required) {\r\n        isValid = value.trim() !== '' && isValid;\r\n    }\r\n\r\n    if (rules.minLength) {\r\n        isValid = value.length >= rules.minLength && isValid\r\n    }\r\n\r\n    if (rules.maxLength) {\r\n        isValid = value.length <= rules.maxLength && isValid\r\n    }\r\n\r\n    if (rules.isEmail) {\r\n        const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n        isValid = pattern.test(value) && isValid\r\n    }\r\n\r\n    if (rules.isNumeric) {\r\n        const pattern = /^\\d+$/;\r\n        isValid = pattern.test(value) && isValid\r\n    }\r\n\r\n    return isValid;\r\n}",
    "const auxiliary = (props) => (props.children);\r\n\r\nexport default auxiliary;",
    "import * as actionTypes from './actionTypes';\r\nimport axios from \"../../axios-orders\";\r\n\r\nexport const addIngredient = (name) => {\r\n    return {\r\n        type: actionTypes.ADD_INGREDIENT,\r\n        ingredientName: name\r\n    };\r\n};\r\n\r\nexport const removeIngredient = (name) => {\r\n    return {\r\n        type: actionTypes.REMOVE_INGREDIENT,\r\n        ingredientName: name\r\n    };\r\n};\r\n\r\nexport const setIngredients = (ingredients) => {\r\n    return {\r\n        type: actionTypes.SET_INGREDIENTS,\r\n        ingredients: ingredients\r\n    };\r\n};\r\n\r\nexport const fetchIngredientsFailed = () => {\r\n    return {\r\n        type: actionTypes.FETCH_INGREDIENTS_FAILED\r\n    }\r\n}\r\n\r\nexport const initIngredients = () => {\r\n    return dispatch => {\r\n        axios.get('https://iburger-70f9c.firebaseio.com/ingredients.json').then(response => {\r\n            dispatch(setIngredients(response.data));\r\n        })\r\n            .catch(error=>{\r\n                dispatch(fetchIngredientsFailed())\r\n            });\r\n    };\r\n};",
    "import * as actionTypes from './actionTypes';\r\nimport axios from \"../../axios-orders\";\r\n\r\n\r\nexport const purchaseBurgerSuccess = (id, orderData) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\r\n        orderId: id,\r\n        orderData: orderData\r\n    };\r\n};\r\n\r\nexport const purchaseBurgerFail = (error) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const purchaseBurgerStart = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_START\r\n    };\r\n};\r\n\r\nexport const purchaseBurger = (orderData, token) => {\r\n    return dispatch => {\r\n        dispatch(purchaseBurgerStart());\r\n        axios.post('/orders.json?auth=' + token, orderData).then(response => {\r\n            dispatch(purchaseBurgerSuccess(response.data.name, orderData));\r\n        })\r\n            .catch(error => {\r\n                dispatch(purchaseBurgerFail(error));\r\n            });\r\n    };\r\n};\r\n\r\nexport const purchaseInit = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_INIT,\r\n\r\n    };\r\n};\r\n\r\nexport const fetchOrdersSuccess = (orders) => {\r\n  return{\r\n    type: actionTypes.FETCH_ORDERS_SUCCESS,\r\n      orders: orders\r\n  };\r\n};\r\n\r\nexport const fetchOrdersFail = (error) => {\r\n    return{\r\n        type: actionTypes.FETCH_ORDERS_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const fetchOrdersStart = () => {\r\n    return{\r\n        type: actionTypes.FETCH_ORDERS_START\r\n    };\r\n};\r\n\r\nexport const fetchOrders = (token, userId) => {\r\n    return dispatch => {\r\n        dispatch(fetchOrdersStart());\r\n        /*This is a query parameter understood by firebase which allows us to well order our data. Now I don't actually want to reorder it\r\n        but this also tells firebase hey you can filter by that.*/\r\n        const queryParams = '?auth=' + token + '&orderBy=\"userId\"&equalTo=\"' + userId +'\"';\r\n        axios.get('/orders.json' + queryParams).then(res => {\r\n                const fetchedOrders = [];\r\n                for (let key in res.data){\r\n                    /*To not lose the IDs though which are my keys(MNewvt4Hu6GS0bYzjfH from firebase) here. I'll do one thing, I'll not push this object, I'll instead push a\r\n                    new object onto this 'fetchedOrders' array where I will distribute the properties of the Order object I've fetched from firebase with the spread operator\r\n                    and add one new property 'id' which is the 'key' because remember the 'key' is in this object we've fetched from firebase where the ID's created by firebase.\r\n                    So now I have my 'fetchedOrders' array full of order objects which also are aware of their IDs.*/\r\n                    fetchedOrders.push({...res.data[key], id: key});\r\n                }\r\n                dispatch(fetchOrdersSuccess(fetchedOrders));\r\n            })\r\n            .catch(err=>{\r\n                dispatch(fetchOrdersFail(err));\r\n            });\r\n    };\r\n};",
    "import * as actionTypes from \"../actions/actionTypes\";\r\nimport axios from \"axios\";\r\n\r\nexport const authStart = () => {\r\n    return {\r\n        type: actionTypes.AUTH_START\r\n    };\r\n};\r\n\r\nexport const authSuccess = (token, userId) => {\r\n    return {\r\n        type: actionTypes.AUTH_SUCCESS,\r\n        idToken: token,\r\n        userId: userId\r\n    };\r\n};\r\n\r\nexport const authFail = (error) => {\r\n    return {\r\n        type: actionTypes.AUTH_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('expirationDate');\r\n    localStorage.removeItem('userId');\r\n    return {\r\n        type: actionTypes.AUTH_LOGOUT\r\n    }\r\n};\r\n\r\nexport const checkAuthTimeout = (expirationTime) => {\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            dispatch(logout());\r\n            /*I want to multiply this value with 1000 to turn my milliseconds to real seconds, so now it should be one hour.*/\r\n        }, expirationTime * 1000);\r\n    };\r\n};\r\n\r\nexport const auth = (email, password, isSignUp) => {\r\n    return dispatch => {\r\n        dispatch(authStart());\r\n        const authData = {\r\n            email: email,\r\n            password: password,\r\n            returnSecureToken: true\r\n        };\r\n        let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDsf2YpNZSnsi9uqIQFjFb6Q5_kC9aKj5Y';\r\n        if (!isSignUp) {\r\n            url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDsf2YpNZSnsi9uqIQFjFb6Q5_kC9aKj5Y';\r\n        }\r\n        axios.post(url, authData).then(\r\n            response => {\r\n                const expirationDate = new Date(new Date().getTime() + response.data.expiresIn * 1000);\r\n                localStorage.setItem('token', response.data.idToken);\r\n                localStorage.setItem('expirationDate', expirationDate);\r\n                localStorage.setItem('userId', response.data.localId);\r\n                dispatch(authSuccess(response.data.idToken, response.data.localId));\r\n                dispatch(checkAuthTimeout(response.data.expiresIn));\r\n            }).catch(err => {\r\n            dispatch(authFail(err.response.data.error));\r\n        });\r\n    };\r\n};\r\n\r\nexport const setAuthRedirectPath = (path) => {\r\n    return{\r\n        type: actionTypes.SET_AUTH_REDIRECT_PATH,\r\n        path: path\r\n    };\r\n};\r\n\r\nexport const authCheckState = () => {\r\n  return dispatch => {\r\n    const token = localStorage.getItem('token');\r\n    if(!token){\r\n        dispatch(logout());\r\n    }else {\r\n        const expirationDate = new Date(localStorage.getItem('expirationDate'));\r\n        if(expirationDate <= new Date()){\r\n\r\n        }else{\r\n            const userId = localStorage.getItem('userId');\r\n            dispatch(authSuccess(token, userId));\r\n            dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000));\r\n        }\r\n\r\n    }\r\n  };\r\n};",
    "// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredients_BreadBottom__1mtin\",\"BreadTop\":\"BurgerIngredients_BreadTop__2yXzW\",\"Seeds1\":\"BurgerIngredients_Seeds1__2a-Ng\",\"Seeds2\":\"BurgerIngredients_Seeds2__1-Ibu\",\"Meat\":\"BurgerIngredients_Meat__Hic3r\",\"Cheese\":\"BurgerIngredients_Cheese__2bezx\",\"Salad\":\"BurgerIngredients_Salad__3WZ8o\",\"Bacon\":\"BurgerIngredients_Bacon__Iz8Sx\"};",
    "import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://iburger-70f9c.firebaseio.com/'\r\n});\r\n\r\nexport default instance;",
    "// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__2TFkQ\",\"Open\":\"SideDrawer_Open__XUltM\",\"Close\":\"SideDrawer_Close__1xxF-\",\"Logo\":\"SideDrawer_Logo__ALGIu\"};",
    "// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__3ecd4\",\"Label\":\"BuildControl_Label__2H-Fv\",\"Less\":\"BuildControl_Less__3iXUo\",\"More\":\"BuildControl_More__1P9BR\"};",
    "import React from \"react\";\r\nimport classes from \"./Backdrop.module.css\";\r\n\r\nconst backdrop = (props) => (\r\n    props.show ?\r\n        <div className={classes.Backdrop} onClick={props.clicked}>\r\n\r\n        </div> : null\r\n);\r\n\r\nexport default backdrop;",
    "import React, {Component} from 'react';\r\nimport classes from './Modal.module.css';\r\nimport Auxiliary from \"../../../hoc/Auxiliary/Auxiliary\";\r\nimport Backdrop from \"../Backdrop/Backdrop\";\r\n\r\n\r\nclass Modal extends Component {\r\n    // This could be an functional component, doesnt have to be a class\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children; /*We basically only update the component if the show state changed. Here however, the\r\n                                                                                                 children of the component simply change to props.children.changed, we're passing a new child,\r\n                                                                                                  we're passing the spinner instead of the order summary,.*/\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Auxiliary>\r\n                <Backdrop show={this.props.show} clicked={this.props.modalClosed}/>\r\n                <div className={classes.Modal}\r\n                     style={{\r\n                         transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n                         opacity: this.props.show ? '1' : '0'\r\n                     }}>\r\n                    {this.props.children}\r\n                </div>\r\n            </Auxiliary>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Modal;",
    "// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__31w2o\",\"Logo\":\"Toolbar_Logo__2OvBp\",\"DesktopOnly\":\"Toolbar_DesktopOnly__1f4x4\"};",
    "import React from \"react\";\r\nimport classes from  './Button.module.css';\r\n\r\nconst button = (props) => (\r\n    /*We are not using the original html button there, we're using our own implementation so there we need to expect a disabled prop and pass it on to the native button disabled attribute.*/\r\n  <button onClick={props.clicked} disabled={props.disabled}\r\n          className={[classes.Button, classes[props.btnType]].join(' ')}>\r\n      {props.children}\r\n  </button>\r\n);\r\n\r\nexport default button;",
    "// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__bOaOy\",\"active\":\"NavigationItem_active__pr7Ne\"};",
    "// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__1f3EQ\",\"OrderButton\":\"BuildControls_OrderButton__18GXa\",\"enable\":\"BuildControls_enable__2LCYd\"};",
    "// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3Nu1P\",\"Success\":\"Button_Success__376w8\",\"Danger\":\"Button_Danger__3_HAW\"};",
    "import React from \"react\";\r\nimport classes from './Spinner.module.css';\r\n\r\nconst spinner = () => (\r\n  <div>\r\n      <div className={classes.Loader}>Loading...</div>\r\n  </div>\r\n);\r\n\r\nexport default spinner;",
    "import React, {Component} from \"react\";\r\nimport Modal from \"../../components/UI/Modal/Modal\";\r\nimport Auxiliary from \"../Auxiliary/Auxiliary\";\r\n\r\nconst withErrorHandler = (WrappedComponent, axios) => {\r\n    return class extends Component { /*I don't set up a name here because I never use that class, it's a class factory essentially, withErrorHandler creates these classes.*/\r\n        state = {\r\n            error: null\r\n        }\r\n\r\n        /*We can add componentDidMount here and in componentDidMount, we can now set up our axios listener, so on the axios instance here, we can now set up our global\r\n        interceptor which also allows us to handle errors.*/\r\n        UNSAFE_componentWillMount() {\r\n            /*I want to call this set state and clear any errors, so that whenever I send a request, I don't have my error set up anymore, so that I definitely clear it here.*/\r\n            /*I will simply create a new property on the fly by using this, the 'this' keyword to refer to the class and then any name of your choice,*/\r\n            this.reqInterceptor = axios.interceptors.request.use(req => {\r\n                this.setState({error: null});\r\n                return req;\r\n            });\r\n            /*I will set or call this set state and set error to the error I'm getting here back from Firebase and this happens to be an object which also contains an error message,*/\r\n            this.resInterceptor = axios.interceptors.response.use(res=>res, error => {\r\n                this.setState({error: error});\r\n            });\r\n        }\r\n\r\n        /*We should remove the interceptors when this component gets unmounted, this is a lifecycle method which is executed at the point of time a component isn't required anymore.*/\r\n        /*So now I have two new properties in my class and I can now use these properties in will unmount to remove the interceptors.*/\r\n        componentWillUnmount() {\r\n            //console.log('Will Unmount',this.reqInterceptor, this.resInterceptor);\r\n            axios.interceptors.request.eject(this.reqInterceptor);\r\n            axios.interceptors.response.eject(this.resInterceptor);\r\n        }\r\n\r\n        errorConfirmedHandler = () => {\r\n            this.setState({error: null})\r\n        }\r\n\r\n        render() {\r\n            return (\r\n                /*Now with this setup here this state error message which I'm outputting here will throw an error initially because the modal component is always present even if we\r\n                    don't show it there. So I'll simply add that ternary expression*/\r\n                <Auxiliary>\r\n                    <Modal show={this.state.error}\r\n                           modalClosed={this.errorConfirmedHandler}>\r\n                        {this.state.error ? this.state.error.message : null}\r\n                    </Modal>\r\n                    <WrappedComponent {...this.props}/>\r\n                </Auxiliary>\r\n            );\r\n        }\r\n    };\r\n}\r\nexport default withErrorHandler;",
    "import React, {Component} from \"react\";\r\nimport classes from \"./BurgerIngredients.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass BurgerIngredients extends Component {\r\n    render() {\r\n        let ingredient = null;\r\n\r\n        switch (this.props.type) {\r\n            case ('bread-bottom'):\r\n                ingredient = <div className={classes.BreadBottom}></div>;\r\n                break;\r\n            case ('bread-top'):\r\n                ingredient = (\r\n                    <div className={classes.BreadTop}>\r\n                        <div className={classes.Seeds1}></div>\r\n                        <div className={classes.Seeds2}></div>\r\n                    </div>\r\n                );\r\n                break;\r\n            case ('meat'):\r\n                ingredient = <div className={classes.Meat}></div>;\r\n                break;\r\n            case ('cheese'):\r\n                ingredient = <div className={classes.Cheese}></div>;\r\n                break;\r\n            case ('bacon'):\r\n                ingredient = <div className={classes.Bacon}></div>;\r\n                break;\r\n            case ('salad'):\r\n                ingredient = <div className={classes.Salad}></div>;\r\n                break;\r\n            default:\r\n                ingredient = null;\r\n        }\r\n        return ingredient;\r\n\r\n    }\r\n}\r\nBurgerIngredients.propTypes = {\r\n  type : PropTypes.string.isRequired\r\n};\r\n\r\nexport default BurgerIngredients;",
    "import React from 'react';\r\nimport classes from './Burger.module.css';\r\nimport BurgerIngredients from \"./BurgerIngredients/BurgerIngredients\";\r\n//import {withRouter} from \"react-router-dom\";\r\n\r\nconst burger = (props) => {\r\n    let transformedIngredients = Object.keys(props.ingredients).map(ingredKey=>{\r\n        return [...Array(props.ingredients[ingredKey])].map((_, i)=>{\r\n            return <BurgerIngredients key={ingredKey+i} type={ingredKey}/>\r\n        });\r\n    }).reduce((previousValue, currentValue) => {\r\n        return previousValue.concat(currentValue)\r\n    }, []);\r\n    if (transformedIngredients.length===0) {\r\n        transformedIngredients= <p>Please start adding ingredients!</p>\r\n    }\r\n    return(\r\n        <div className={classes.Burger}>\r\n            <BurgerIngredients type=\"bread-top\"/>\r\n            {transformedIngredients}\r\n            <BurgerIngredients type=\"bread-bottom\"/>\r\n        </div>\r\n    );\r\n};\r\n\r\n/*If we use a special higher order component provided by react-router-dom(withRouter), we can actually kind of inject match location and history, inject these special props in any\r\n component.*/\r\n//export default withRouter(burger);\r\nexport default burger;",
    "// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__Eem7_\"};",
    "// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__1rbLu\"};",
    "// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__2itfo\"};",
    "// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__2Tgwy\"};",
    "// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__15zGQ\"};",
    "// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__3k7iV\"};",
    "// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__22aR1\"};",
    "// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__21lc9\",\"load1\":\"Spinner_load1__2NiCP\"};",
    "export default __webpack_public_path__ + \"static/media/burger-logo.ec69c7f6.png\";",
    "import React from \"react\";\r\nimport burgerLogo from '../../assests/Images/burger-logo.png';\r\nimport classes from './Logo.module.css';\r\n\r\nconst logo = (props) => (\r\n  <div className={classes.Logo} style={{height: props.height}}>\r\n      <img src={burgerLogo} alt=\"MyBurger\"/>\r\n  </div>\r\n);\r\n\r\nexport default logo;",
    "import React from \"react\";\r\nimport classes from './NavigationItem.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst navigationItem = (props) => (\r\n    <li className={classes.NavigationItem}>\r\n        {/*Active class attached at runtime by nav link will not match our active class(NavigationItem a.active). We can easily fix that, that nav link element has one extra property\r\n        we can set up, we can set our own activeClassName as you learned. You can add activeClassName here, and here I then want to use classes, 'active' again referring to my classes object\r\n        which comes from my css file, this will now be the activeClassName as our css modules transformation spits it out.*/}\r\n        {/*As long as our current paths starts with this path here(to={props.link}), this link is treated to be active. And for just '/' every route starts with that.\r\n        So we can simply fix this by adding the 'exact' route here and with that we make sure that this only gets used if it is exact.*/}\r\n        {/*Now this of course will attach 'exact' to all nav links, If you only knew that somewhere this should happen, you could simply pass the 'exact' property, a new property\r\n        i just defined to <NavigationItem> and in <NavigationItem>, you can now bind the 'exact' prop of <NavLink> to 'props.exact', so to the one you're passing in from outside.\r\n        Now this will actually only be used on the first link with just '/' and not on the second with '/orders'.*/}\r\n        <NavLink to={props.link}\r\n                 exact={props.exact}\r\n                 activeClassName={classes.active}>\r\n            {props.children}\r\n        </NavLink>\r\n    </li>\r\n);\r\n\r\nexport default navigationItem;",
    "import React from \"react\";\r\nimport classes from './NavigationItems.module.css';\r\nimport NavigationItem from \"./NavigationItem/NavigationItem\";\r\n\r\nconst navigationItems = (props) => (\r\n    <ul className={classes.NavigationItems}>\r\n        <NavigationItem link=\"/\" exact>Burger Builder</NavigationItem>\r\n        {props.isAuthenticated ?\r\n            <NavigationItem link=\"/orders\">Orders</NavigationItem>\r\n            : null}\r\n        {!props.isAuthenticated ?\r\n            <NavigationItem link=\"/auth\">Authenticate</NavigationItem>\r\n            : <NavigationItem link=\"/logout\">Logout</NavigationItem>}\r\n    </ul>\r\n);\r\n\r\nexport default navigationItems;",
    "import React from \"react\";\r\nimport Logo from \"../../Logo/Logo\";\r\nimport NavigationItems from \"../NavigationItems/NavigationItems\";\r\nimport classes from './SideDrawer.module.css';\r\nimport Backdrop from \"../../UI/Backdrop/Backdrop\";\r\nimport Auxiliary from \"../../../hoc/Auxiliary/Auxiliary\";\r\n\r\n\r\nconst sideDrawer = (props) => {\r\n    //...\r\n    let attachedClasses = [classes.SideDrawer, classes.Close];\r\n    if(props.open){\r\n        attachedClasses = [classes.SideDrawer, classes.Open];\r\n    }\r\n    return (\r\n        <Auxiliary>\r\n            <Backdrop show={props.open} clicked={props.closed}/>\r\n            <div className={attachedClasses.join(' ')} onClick={props.closed}>\r\n                <div className={classes.Logo}>\r\n                    <Logo/>\r\n                </div>\r\n                <nav>\r\n                    {/*So here, 'isAuthenticated' will be passed to 'NavigationItems' as a prop and we pass on 'props.isAuth',\r\n                    'isAuth' because that's what we just picked in the 'Layout', 'isAuth'.*/}\r\n                    <NavigationItems isAuthenticated={props.isAuth}/>\r\n                </nav>\r\n            </div>\r\n        </Auxiliary>\r\n    );\r\n};\r\n\r\nexport default sideDrawer;",
    "import React from 'react';\r\nimport classes from './DrawerToggle.module.css';\r\n\r\nconst drawerToggle = (props) => (\r\n<div onClick={props.clicked} className={classes.DrawerToggle}>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n</div>\r\n);\r\n\r\nexport default drawerToggle;\r\n",
    "import React from \"react\";\r\nimport classes from './Toolbar.module.css';\r\nimport Logo from \"../../Logo/Logo\";\r\nimport NavigationItems from \"../NavigationItems/NavigationItems\";\r\nimport DrawerToggle from \"../SideDrawer/DrawerToggle/DrawerToggle\";\r\n\r\nconst toolbar = (props) => (\r\n    <header className={classes.Toolbar}>\r\n        <DrawerToggle clicked={props.drawerToggleClicked}/>\r\n        <div className={classes.Logo}>\r\n            <Logo/>\r\n        </div>\r\n        <nav className={classes.DesktopOnly}>\r\n            {/*So here, 'isAuthenticated' will be passed to 'NavigationItems' as a prop and we pass on 'props.isAuth', 'isAuth' because that's what we just picked in the 'Layout', 'isAuth'.*/}\r\n            <NavigationItems isAuthenticated={props.isAuth}/>\r\n        </nav>\r\n    </header>\r\n);\r\n\r\nexport default toolbar;",
    "import React, {Component} from 'react';\r\nimport SideDrawer from \"../../components/Navigation/SideDrawer/SideDrawer\";\r\nimport Auxiliary from '../Auxiliary/Auxiliary';\r\nimport classes from './Layout.module.css';\r\nimport Toolbar from \"../../components/Navigation/Toolbar/Toolbar\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Layout extends Component {\r\n    state = {\r\n        showSideDrawer: false\r\n    }\r\n\r\n\r\n    sideDrawerClosedHandler = () => {\r\n        this.setState({showSideDrawer: false});\r\n    }\r\n\r\n    sideDrawerToggleHandler = () => {\r\n        this.setState((prevState) => {\r\n            return {showSideDrawer: !prevState.showSideDrawer};\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Auxiliary>\r\n                <Toolbar\r\n                    isAuth={this.props.isAuthenticated}\r\n                    drawerToggleClicked={this.sideDrawerToggleHandler}/>\r\n                <SideDrawer\r\n                    isAuth={this.props.isAuthenticated}\r\n                    open={this.state.showSideDrawer}\r\n                    closed={this.sideDrawerClosedHandler}/>\r\n                <main className={classes.Content}>\r\n                    {this.props.children}\r\n                </main>\r\n            </Auxiliary>\r\n        )\r\n    }\r\n\r\n}\r\nconst mapStateToProps = state => {\r\n  return{\r\n    isAuthenticated: state.auth.token !== null\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps) (Layout);",
    "import React from \"react\";\r\nimport classes from './BuildControl.module.css';\r\n\r\nconst buildControl = (props) => (\r\n    <div className={classes.BuildControl}>\r\n        <div className={classes.Label}>{props.ingredLabel}</div>\r\n        <button className={classes.Less}\r\n                onClick={props.remove}\r\n                disabled={props.disabled}>\r\n                Less\r\n        </button>\r\n        <button\r\n            className={classes.More}\r\n            onClick={props.add}>\r\n            More\r\n        </button>\r\n    </div>\r\n);\r\nexport default buildControl;",
    "import React from \"react\";\r\nimport classes from './BuildControls.module.css';\r\nimport BuildControl from \"./BuildControl/BuildControl\";\r\n\r\nconst controls = [\r\n    {label: 'Salad', type: 'salad'},\r\n    {label: 'Bacon', type: 'bacon'},\r\n    {label: 'Cheese', type: 'cheese'},\r\n    {label: 'Meat', type: 'meat'}\r\n];\r\nconst buildControls = (props) => (\r\n<div className={classes.BuildControls}>\r\n    <p>Current Price: <strong>{props.price.toFixed(2)}</strong> $</p>\r\n    {controls.map(ctrl=>(\r\n        <BuildControl\r\n            key={ctrl.label}\r\n            ingredLabel={ctrl.label}\r\n            add={() => props.ingredientAdd(ctrl.type)}\r\n            remove={()=> props.ingredientRemove(ctrl.type)}\r\n            disabled={props.ingredientDisabled[ctrl.type]}\r\n        />\r\n    ))}\r\n    <button\r\n        className={classes.OrderButton}\r\n        disabled={!props.purchasable}\r\n        onClick={props.ordered}>\r\n        {props.isAuth ? 'ORDER NOW' : 'SIGN UP TO ORDER'}\r\n    </button>\r\n</div>\r\n    );\r\nexport default buildControls;",
    "import React, {Component} from 'react';\r\nimport Auxiliary from \"../../../hoc/Auxiliary/Auxiliary\";\r\nimport Button from \"../../UI/Button/Button\";\r\n\r\nclass OrderSummary extends Component{\r\n    render() {\r\n        const ingredientsSummary = Object.keys(this.props.ingredients).map((igKey) => {\r\n            return (<li key={igKey}>\r\n                <span style={{textTransform: 'capitalize'}}>{igKey}:</span> {this.props.ingredients[igKey]}\r\n            </li>);\r\n        });\r\n\r\n        return(\r\n            <Auxiliary>\r\n                <h3>Your Order</h3>\r\n                <p>A delicious burger with the followings ingredients: </p>\r\n                <ul>\r\n                    {ingredientsSummary}\r\n                </ul>\r\n                <p><strong>Total Price : {this.props.summaryPrice.toFixed(2)}</strong></p>\r\n                <p>Continue to checkout?</p>\r\n                <Button btnType=\"Danger\" clicked={this.props.purchaseCanceled}>CANCEL</Button>\r\n                <Button btnType=\"Success\" clicked={this.props.purchaseContinued}>CONTINUE</Button>\r\n            </Auxiliary>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default OrderSummary;",
    "import React, {Component} from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport Auxiliary from \"../../hoc/Auxiliary/Auxiliary\";\r\nimport Burger from \"../../components/Burger/Burger\";\r\nimport BuildControls from \"../../components/Burger/BuildControls/BuildControls\";\r\nimport Modal from \"../../components/UI/Modal/Modal\";\r\nimport OrderSummary from \"../../components/Burger/OrderSummary/OrderSummary\";\r\nimport axios from \"../../axios-orders\";\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\r\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";  //so withErrorHandler starting with a lowercase character because we're not going to use it in JSX\r\nimport * as action from '../../store/actions/index';\r\n\r\n\r\n\r\n/*const INGREDIENTS_PRICE = {\r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    meat: 1.3,\r\n    bacon: 0.7\r\n}*/\r\n\r\nexport class BurgerBuilder extends Component {\r\n\r\n\r\n    state = {\r\n        // ingredients: null,\r\n        // totalPrice: 4,\r\n        // purchasable: false,\r\n        purchasing: false\r\n        // loading: false,\r\n        // error: false\r\n    }\r\n\r\n\r\n\r\n    /* I want to set up the state dynamically and a good place for fetching data is componentDidMount,*/\r\n    UNSAFE_componentWillMount() {\r\n    this.props.onInitIngredients();\r\n    }\r\n\r\n    updatePurchaseState(ingredientsCopy) {\r\n        const sum = Object.keys(ingredientsCopy).map(\r\n            igKey => {\r\n                return ingredientsCopy[igKey];\r\n            }).reduce((sum, el) => {\r\n            return sum + el;\r\n        }, 0);\r\n        return sum > 0;\r\n}\r\n\r\n    // updatePurchaseState(ingredientsCopy) {\r\n    //     const sum = Object.keys(ingredientsCopy).map(\r\n    //         igKey => {\r\n    //             return ingredientsCopy[igKey];\r\n    //         }).reduce((sum, el) => {\r\n    //         return sum + el;\r\n    //     }, 0);\r\n    //     this.setState({purchasable: sum > 0})\r\n    //     /*I call reduce to again reduce this array and turn it into a single number, the sum of all ingredients.  For that, we'll have a starting number of 0 and then we have a function\r\n    //     which is executed on each element in this mapped array. In this function, I get new sum and the individual element and keep in mind, sum simply is the constantly updated\r\n    //     current sum up until the current iteration where this function is executed and once this function was executed on all array elements, sum is the final result.\r\n    //     And here I'll simply return the current sum plus the element and keep in mind element is a number because it is the value we accessed here. With that, I get a sum constant\r\n    //     which is zero if we have no ingredients added or any other number representing*/\r\n    // }\r\n\r\n    // addIngredientHandler = (type) => {\r\n    //     const oldCount = this.state.ingredients[type];\r\n    //     const updatedCount = oldCount + 1;\r\n    //     const updatedIngredients = {\r\n    //         ...this.state.ingredients\r\n    //     };\r\n    //     updatedIngredients[type] = updatedCount;\r\n    //     const priceAddition = INGREDIENTS_PRICE[type];\r\n    //     const oldPrice = this.state.totalPrice;\r\n    //     const newPrice = priceAddition + oldPrice;\r\n    //     this.setState({\r\n    //         totalPrice: newPrice,\r\n    //         ingredients: updatedIngredients\r\n    //     });\r\n    //     this.updatePurchaseState(updatedIngredients);\r\n    // }\r\n\r\n\r\n    // removeIngredientHandler = (type) => {\r\n    //     const oldCount = this.state.ingredients[type];\r\n    //     if (oldCount <= 0) {\r\n    //         return;\r\n    //     }\r\n    //     let updatedCount = oldCount - 1;\r\n    //     const updatedIngredients = {\r\n    //         ...this.state.ingredients\r\n    //     }\r\n    //     updatedIngredients[type] = updatedCount;\r\n    //     const oldPrice = this.state.totalPrice;\r\n    //     const newPrice = oldPrice - INGREDIENTS_PRICE[type];\r\n    //     this.setState({\r\n    //         totalPrice: newPrice, ingredients: updatedIngredients\r\n    //     });\r\n    //     this.updatePurchaseState(updatedIngredients);\r\n    // }\r\n\r\n    purchaseHandler = () => {\r\n        if(this.props.isAuthenticated){\r\n            this.setState({\r\n                purchasing: true\r\n            });\r\n        }else{\r\n            this.props.onSetRedirectPath('/checkout');\r\n            this.props.history.push('/auth');\r\n        }\r\n\r\n    }\r\n    purchaseCancelHandler = () => {\r\n        this.setState({\r\n            purchasing: false\r\n        });\r\n    }\r\n    purchaseContinueHandler = () => {\r\n        this.props.onInitPurchase();\r\n        this.props.history.push('/checkout');\r\n    }\r\n    // purchaseContinueHandler = () => {\r\n        //alert(\"You continue\");\r\n        // this.setState({loading: true});\r\n        // const order = {\r\n        //     ingredients: this.state.ingredients,\r\n        //     price: this.state.totalPrice,\r\n        //     customer: {\r\n        //         name: 'Miguel Varona',\r\n        //         address: {\r\n        //             street: 'Las Delicias',\r\n        //             zipCode: 'M1 4FG',\r\n        //             country: 'Canada'\r\n        //         },\r\n        //         email: 'test@test.com'\r\n        //     },\r\n        //     deliveryMethod: 'fastest'\r\n        // }\r\n        // axios.post('/orders.json', order).then(response => {\r\n        //     this.setState({loading: false, purchasing: false});\r\n        // })\r\n        //     .catch(error => {\r\n        //         this.setState({loading: false, purchasing: false});\r\n        //     });\r\n        // const queryParams = [];\r\n        // for(let i in this.props.ings){\r\n        //     /*encodeURIComponent, which simply encodes my elements such that they can be used in the URL, this is relevant for whitespace and so on.*/\r\n        //     /*So i is the key, these are the property names in my ingredients in the end just and here I'm setting property name equal to well the value for that property name.*/\r\n        //     queryParams.push(encodeURIComponent(i) + '=' + encodeURIComponent(this.props.ings[i]));\r\n        // }\r\n        /*We have to pass the total price along with the ingredients from the burger builder to the checkout component, to the checkout container.*/\r\n        // queryParams.push('price='+ this.props.price);\r\n        // const queryString = queryParams.join('&');\r\n        /*And there we have this push prop which allows us to basically switch the page and push a new page onto that stack of pages. So now here I can simply say that I want\r\n        to go to /checkout,*/\r\n    //     this.props.history.push({\r\n    //         pathname: '/checkout',\r\n    //         search: '?' +queryString\r\n    //     });\r\n    // }\r\n\r\n    render() {\r\n        const disabledInfo = {\r\n            ...this.props.ings\r\n        };\r\n        for (let key in disabledInfo) {\r\n            disabledInfo[key] = disabledInfo[key] <= 0;\r\n        } // {salad : true, meat: false,...}\r\n\r\n        /*I overwrite a variable burger which I'll set prior to that, burger, where I will use the spinner and then I only want to overwrite it if this state ingredients\r\n        is basically not null, so that will only be the case if it was loaded.*/\r\n        let orderSummary = null;\r\n        let burger = this.props.error ? <p>Ingredients cant be loaded</p> : <Spinner/>;\r\n        if (this.props.ings) {\r\n            burger = (<Auxiliary>\r\n                <Burger ingredients={this.props.ings}/>\r\n                <BuildControls\r\n                    ingredientAdd={this.props.onIngredientAdded}\r\n                    ingredientRemove={this.props.onIngredientRemoved}\r\n                    ingredientDisabled={disabledInfo}\r\n                    /*Where we passed 'purchasable', we could simply not reach out to our 'state.purchasable' property because we don't have that anymore but to our\r\n                    'updatePurchaseState' method which now simply returns true or false and return the result of this function call */\r\n                    purchasable={this.updatePurchaseState(this.props.ings)}\r\n                    price={this.props.price}\r\n                    ordered={this.purchaseHandler}\r\n                    isAuth={this.props.isAuthenticated}\r\n                />\r\n            </Auxiliary>);\r\n\r\n            orderSummary = <OrderSummary ingredients={this.props.ings}\r\n                                         purchaseCanceled={this.purchaseCancelHandler}\r\n                                         purchaseContinued={this.purchaseContinueHandler}\r\n                                         summaryPrice={this.props.price}/> ;\r\n        }\r\n        /*So after this if statement where we check for ingredients, I'll add this old if statement where we check for the loading state to overwrite order summary when needed. */\r\n        // if (this.state.loading) {\r\n        //     orderSummary = <Spinner/>;\r\n        // }\r\n\r\n        return (\r\n            <Auxiliary>\r\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\r\n                    {orderSummary}\r\n                </Modal>\r\n                {burger}\r\n            </Auxiliary>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return{\r\n        ings: state.burgerBuilder.ingredients,\r\n        price: state.burgerBuilder.totalPrice,\r\n        error: state.burgerBuilder.error,\r\n        isAuthenticated: state.auth.token !== null\r\n\r\n    };\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return{\r\n        onIngredientAdded: (ingName) => dispatch(action.addIngredient(ingName)),\r\n        onIngredientRemoved: (ingName) => dispatch(action.removeIngredient(ingName)),\r\n        onInitIngredients: () => dispatch(action.initIngredients()),\r\n        onInitPurchase: () => dispatch(action.purchaseInit()),\r\n        onSetRedirectPath: (path) => dispatch(action.setAuthRedirectPath(path))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps) (withErrorHandler(BurgerBuilder, axios));",
    "import React, {Component} from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport * as actions from \"../../../store/actions/index\";\r\n\r\nclass Logout extends Component {\r\n    /*So here what I can do is I can add 'componentDidMount' and I can then call 'this.props.onLogout' and this will then be the first thing I do when rendering this component.*/\r\n    componentDidMount() {\r\n        this.props.onLogout();\r\n    }\r\n\r\n    render() {\r\n        /*And then the only thing I return as part of this component is that 'Redirect' component here which means whenever this container is loaded,\r\n        it just redirects me, of course a very easy way of redirecting the user.*/\r\n        return <Redirect to=\"/\"/>;\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return{\r\n        onLogout: () => dispatch(actions.logout())\r\n    };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps) (Logout);",
    "import React, { Component } from 'react';\r\nconst asyncComponent = ( importComponent ) => {\r\n    return class extends Component {\r\n        state = {\r\n            component: null\r\n        }\r\n        componentDidMount() {\r\n            importComponent()\r\n                .then(component => {\r\n                    this.setState({ component: component.default });\r\n                })\r\n        }\r\n        render () {\r\n            const Component = this.state.component;\r\n            return Component ? <Component {...this.props} /> : null;\r\n        }\r\n    }\r\n}\r\nexport default asyncComponent;",
    "import React, {Component} from \"react\";\nimport Layout from \"./hoc/Layout/Layout\";\nimport BurgerBuilder from \"./containers/BurgerBuilder/BurgerBuilder\";\nimport {Switch, Route, withRouter, Redirect} from \"react-router-dom\";\nimport Logout from \"./containers/Auth/Logout/Logout\";\nimport * as actions from \"./store/actions/index\";\nimport {connect} from \"react-redux\";\nimport asyncComponent from \"./hoc/asyncComponent/asyncComponent\";\n\nconst asyncCheckout = asyncComponent(()=>{\n    return import('./components/Checkout/Checkout');\n});\n\nconst asyncOrders = asyncComponent(()=>{\n    return import('./containers/Orders/Orders');\n});\n\nconst asyncAuth = asyncComponent(()=>{\n    return import('./containers/Auth/Auth');\n});\n\nclass App extends Component {\n    componentDidMount() {\n        this.props.onTryAutoSignup();\n    }\n\n    render() {\n        let routes = (\n            <Switch>\n                <Route path=\"/auth\" exact component={asyncAuth}/>\n                <Route path=\"/\" exact component={BurgerBuilder}/>\n                <Redirect to=\"/\"/>\n            </Switch>\n        );\n\n        if (this.props.isAuthenticated) {\n            routes = (\n                <Switch>\n                    <Route path=\"/checkout\" component={asyncCheckout}/>\n                    <Route path=\"/orders\" component={asyncOrders}/>\n                    <Route path=\"/logout\" exact component={Logout}/>\n                    <Route path=\"/auth\" exact component={asyncAuth}/>\n                    <Route path=\"/\" exact component={BurgerBuilder}/>\n                    <Redirect to=\"/\"/>\n                </Switch>\n            );\n        }\n\n        return (\n            <div>\n                <Layout>\n                    {routes}\n                </Layout>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuthenticated: state.auth.token !== null\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onTryAutoSignup: () => dispatch(actions.authCheckState())\n    };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n",
    "const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n",
    "import * as actionTypes from '../actions/actionTypes';\r\nimport {updateObject} from \"../../shared/utility\";\r\n\r\nconst initialState = {\r\n    /* We probably want to have the same state we already use in the 'BurgerBuilder.js'*/\r\n    ingredients: null,\r\n    totalPrice: 4,\r\n    error: false,\r\n    building: false\r\n};\r\n\r\nconst INGREDIENTS_PRICE = {\r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    meat: 1.3,\r\n    bacon: 0.7\r\n}\r\n\r\nconst addIngredients = (state, action) => {\r\n    const updatedIngredient = {[action.ingredientName]: state.ingredients[action.ingredientName] + 1};\r\n    const updateIngredients = updateObject(state.ingredients, updatedIngredient);\r\n    const updatedState = {\r\n        ingredients: updateIngredients,\r\n        totalPrice: state.totalPrice + INGREDIENTS_PRICE[action.ingredientName],\r\n        building: true\r\n    };\r\n    return updateObject(state, updatedState);\r\n};\r\n\r\nconst removeIngredients = (state, action) => {\r\n    const updatedIng = {[action.ingredientName]: state.ingredients[action.ingredientName] - 1};\r\n    const updateIngs = updateObject(state.ingredients, updatedIng);\r\n    const updatedSt = {\r\n        ingredients: updateIngs,\r\n        totalPrice: state.totalPrice + INGREDIENTS_PRICE[action.ingredientName]\r\n    };\r\n    return updateObject(state, updatedSt);\r\n};\r\n\r\nconst setIngredients = (state, action) => {\r\n    return updateObject(state, {\r\n        ingredients: {\r\n            salad: action.ingredients.salad,\r\n            bacon: action.ingredients.bacon,\r\n            cheese: action.ingredients.cheese,\r\n            meat: action.ingredients.meat\r\n        },\r\n        totalPrice: 4,\r\n        error: false,\r\n        /*Now when 'setIngredients' is called though, I want to set 'building' to 'false' because we just reloaded the page, we're starting from scratch we're not building yet.*/\r\n        building: false\r\n    });\r\n};\r\n\r\nconst fetchIngredientsFailed = (state, action) => {\r\n    return updateObject(state, {error: true});\r\n};\r\n\r\nconst burgerBuilder = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        /* We don't need 'break' statements because we return in each case anyways, so the code execution won't continue in this function. */\r\n        case actionTypes.ADD_INGREDIENT:\r\n            return addIngredients(state, action);\r\n        case actionTypes.REMOVE_INGREDIENT:\r\n            return removeIngredients(state, action);\r\n        case actionTypes.SET_INGREDIENTS:\r\n            return setIngredients(state, action);\r\n        case actionTypes.FETCH_INGREDIENTS_FAILED:\r\n            return fetchIngredientsFailed(state);\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default burgerBuilder;",
    "import * as actionTypes from '../actions/actionTypes';\r\nimport {updateObject} from \"../../shared/utility\";\r\n\r\nconst initialState = {\r\n    order: [],\r\n    loading: false,\r\n    purchased: false\r\n};\r\n\r\nconst purchaseInit = (state, action) => {\r\n    return updateObject(state, {purchased: false});\r\n};\r\n\r\nconst purchaseBurgerStart = (state, action) => {\r\n    return updateObject(state,{loading: true});\r\n};\r\n\r\nconst purchaseBurgerSuccess = (state, action) => {\r\n    const newOrder = updateObject(action.orderData, {id: action.orderId});\r\n\r\n    return updateObject(state, {\r\n        loading: false,\r\n        purchased: true,\r\n        order: state.order.concat(newOrder)\r\n    });\r\n};\r\n\r\nconst purchaseBurgerFail = (state, action) => {\r\n    return updateObject(state, {loading: false});\r\n};\r\n\r\nconst fetchOrdersStart = (state, action) => {\r\n    return updateObject(state,{loading: true});\r\n};\r\n\r\nconst fetchOrdersSuccess = (state, action) => {\r\n    /*I want to store the orders I fetched so I'll get my state and I'll set orders equal to action and there the property name was just 'orders',\r\n               we can confirm this in our 'action' creator, in the 'order' file, there we dispatched 'fetchOrderSuccess' and in 'fetchOrdersSuccess', we have our 'orders' property.\r\n               So this is the 'orders' property we can extract in our reducer therefore, this one and these are the orders already, if you have a look at the transformation function\r\n               in an array format, so we can store that in our array.*/\r\n    return updateObject(state, {\r\n        order: action.orders,\r\n        loading: false});\r\n};\r\n\r\nconst fetchOrdersFail = (state, action) => {\r\n    return updateObject(state, {loading: false});\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.PURCHASE_INIT: return  purchaseInit(state, action);\r\n\r\n        case actionTypes.PURCHASE_BURGER_START: return purchaseBurgerStart(state, action);\r\n\r\n        case actionTypes.PURCHASE_BURGER_SUCCESS: return purchaseBurgerSuccess(state, action);\r\n\r\n        case actionTypes.PURCHASE_BURGER_FAIL: return purchaseBurgerFail(state, action);\r\n\r\n        case actionTypes.FETCH_ORDERS_START: return fetchOrdersStart(state, action);\r\n\r\n        case actionTypes.FETCH_ORDERS_SUCCESS: return fetchOrdersSuccess(state, action);\r\n\r\n        case actionTypes.FETCH_ORDERS_FAIL: return fetchOrdersFail(state, action);\r\n\r\n        default:\r\n            return {\r\n                ...state\r\n            }\r\n    }\r\n};\r\n\r\nexport default reducer;",
    "import * as actionTypes from \"../actions/actionTypes\";\r\nimport {updateObject} from \"../../shared/utility\";\r\n\r\n\r\nconst initialState = {\r\n  token: null,\r\n  userId: null,\r\n  error: null,\r\n  loading: false,\r\n  authRedirectPath: '/'\r\n};\r\n\r\nconst authStart = (state, action) =>{\r\n    return updateObject(state, {error:null, loading: true});\r\n};\r\n\r\nconst authSuccess = (state, action) =>{\r\n    return updateObject(state, {token: action.idToken, userId: action.userId, error:null, loading: false});\r\n};\r\n\r\nconst authFail = (state, action) =>{\r\n    return updateObject(state, {error: action.error, loading: false});\r\n};\r\n\r\nconst authLogOut = (state, action) =>{\r\n    return updateObject(state, {token: null, userId: null});\r\n};\r\n\r\nconst setAuthRedirectPath = (state, action) =>{\r\n    return updateObject(state, {authRedirectPath: action.path});\r\n};\r\n\r\n\r\nconst reducer = (state= initialState, action) => {\r\n    switch (action.type){\r\n        case actionTypes.AUTH_START:\r\n            return authStart(state, action);\r\n        case actionTypes.AUTH_SUCCESS:\r\n            return authSuccess(state,action);\r\n        case actionTypes.AUTH_FAIL:\r\n            return authFail(state, action);\r\n        case actionTypes.AUTH_LOGOUT:\r\n            return authLogOut(state, action);\r\n        case actionTypes.SET_AUTH_REDIRECT_PATH:\r\n            return setAuthRedirectPath(state, action);\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;",
    "import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport burgerBuilderReducer from \"./store/reducers/burgerBuilder\";\nimport orderReducer from \"./store/reducers/orders\";\nimport authReducer from \"./store/reducers/auth\";\n\nconst composeEnhancers = process.env.NODE_ENV==='development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null   || compose;\n\nconst rootReducer = combineReducers({\n    burgerBuilder: burgerBuilderReducer,\n    order: orderReducer,\n    auth: authReducer\n});\n\nconst store = createStore(rootReducer, composeEnhancers(\n    applyMiddleware(thunk)\n));\n\n\nconst app = (\n    <Provider store={store}>\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n    </Provider>\n);\n\n\nReactDOM.render(app,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"
  ],
  "sourceRoot": ""
}